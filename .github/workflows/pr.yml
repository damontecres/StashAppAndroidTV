name: PR

on:
  pull_request:

defaults:
  run:
    shell: bash

env:
  BUILD_TOOLS_VERSION: 34.0.0
  BUILD_DIRS_ARTIFACT: build-dirs

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout the code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Need the tags to build
        submodules: true # Need the submodules to build
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Run pre-commit
      uses: pre-commit/action@v3.0.1

  build:
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need the tags to build
          submodules: true # Need the submodules to build
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: '17'
          cache: 'gradle'
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          packages: "tools platform-tools build-tools;${{ env.BUILD_TOOLS_VERSION }}"
      - name: Build app
        id: buildapp
        run: |
          ./gradlew clean build
          echo "apk=$(ls app/build/outputs/apk/debug/StashAppAndroidTV-debug*.apk)" >> "$GITHUB_OUTPUT"
      - name: Tar build dirs
        run: |
          tar -czf build.tgz */build/.
      - uses: actions/upload-artifact@v4
        id: upload-build-dirs
        with:
          name: "${{ env.BUILD_DIRS_ARTIFACT }}"
          path: build.tgz
          if-no-files-found: error
      - uses: actions/upload-artifact@v4
        with:
          name: StashAppAndroidTV-debug.apk
          path: "${{ steps.buildapp.outputs.apk }}"
          compression-level: 0

  instrument-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        api-level: [23]
    needs: [pre-commit, build]
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Need the tags to build
          submodules: true # Need the submodules to build
      - name: Download build-dirs
        uses: actions/download-artifact@v4
        with:
          name: "${{ env.BUILD_DIRS_ARTIFACT }}"
      - name: Extract build dirs
        run: |
          tar -xzf build.tgz
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: '17'
          cache: 'gradle'
      - name: AVD cache
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      - name: create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: android-tv
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      - name: run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: android-tv
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: ./gradlew connectedCheck
